<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>The Unsent Chamber</title>
  <script type="module">
    // Import the functions you need from the Firebase SDKs
    import { initializeApp } from "https://www.gstatic.com/firebasejs/12.0.0/firebase-app.js";
    import { getDatabase, ref, push, onValue } from "https://www.gstatic.com/firebasejs/12.0.0/firebase-database.js";

    // Your web app's Firebase configuration
    const firebaseConfig = {
      apiKey: "AIzaSyDuM4PFCIYBSA75MEiQgxmky77ml5hIuOM",
      authDomain: "the-unsent-chamber.firebaseapp.com",
      databaseURL: "https://the-unsent-chamber-default-rtdb.firebaseio.com",
      projectId: "the-unsent-chamber",
      storageBucket: "the-unsent-chamber.firebasestorage.app",
      messagingSenderId: "693365297092",
      appId: "1:693365297092:web:0df5991809ef021a801e91",
      measurementId: "G-HK5P4LB86C"
    };

    // Initialize Firebase
    const app = initializeApp(firebaseConfig);
    const db = getDatabase(app);

    function unsentApp() {
      return {
        name: '',
        message: '',
        searchTerm: '',
        showForm: false,
        posts: [],

        postMessage() {
          if (!this.name || !this.message) return alert("Name and message required.");

          const newPost = {
            name: this.name,
            message: this.message,
            timestamp: new Date().toLocaleString()
          };

          // Push data to Firebase Realtime Database
          const postsRef = ref(db, 'messages');
          push(postsRef, newPost);

          this.name = '';
          this.message = '';
          this.showForm = false;
        },

        filteredPosts() {
          if (!this.searchTerm.trim()) return this.posts;
          return this.posts.filter(p => p.name.toLowerCase().includes(this.searchTerm.toLowerCase()));
        },

        loadPosts() {
          const postsRef = ref(db, 'messages');
          onValue(postsRef, (snapshot) => {
            const data = snapshot.val();
            this.posts = data ? Object.values(data) : [];
          });
        }
      };
    }
  </script>
  <style>
    body {
      margin: 0;
      font-family: 'Segoe UI', sans-serif;
      background-color: #0a0a0a;
      color: #f4f4f4;
    }
    .glass {
      background: rgba(255, 255, 255, 0.05);
      backdrop-filter: blur(10px);
      border-radius: 1rem;
      padding: 1rem;
      margin-bottom: 1rem;
      box-shadow: 0 0 10px rgba(255,255,255,0.1);
    }
    input, textarea {
      background: rgba(255,255,255,0.1);
      border: none;
      border-radius: 0.5rem;
      padding: 0.5rem;
      color: white;
      width: 100%;
      margin-top: 0.5rem;
      margin-bottom: 0.5rem;
    }
    button {
      background-color: #1f2937;
      border: none;
      padding: 0.5rem 1rem;
      border-radius: 0.5rem;
      color: white;
      cursor: pointer;
      margin-top: 0.5rem;
    }
    button:hover {
      background-color: #374151;
    }
    small {
      font-size: 0.8rem;
      color: #ccc;
    }
    nav {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 2rem;
    }
    nav h1 {
      font-size: 1.5rem;
    }
    nav button {
      font-size: 1rem;
    }
  </style>
</head>
<body x-data="unsentApp()" x-init="loadPosts()">
  <div id="lockscreen" style="position: fixed; inset: 0; background-color: black; z-index: 9999; display: flex; flex-direction: column; justify-content: center; align-items: center;">
    <h1 style="margin-bottom: 1rem;">Enter Password to Access</h1>
    <input id="passInput" type="password" placeholder="Enter password..." />
    <button onclick="verifyPassword()">Unlock</button>
  </div>

  <main class="container" style="max-width: 700px; margin: auto; padding: 2rem;">
    <nav>
      <h1>ðŸ’Œ The Unsent Chamber</h1>
      <button @click="showForm = !showForm">Post Yours</button>
    </nav>

    <div class="glass">
      <input x-model="searchTerm" placeholder="Search by name (e.g. Agrima)" />
    </div>

    <div class="glass" x-show="showForm">
      <label>From / To:</label>
      <input x-model="name" placeholder="Enter a name (e.g. Agrima, Myself)" />
      <label>Your Message:</label>
      <textarea x-model="message" rows="6" placeholder="Write your message here..."></textarea>
      <button @click="postMessage">Send</button>
    </div>

    <template x-for="post in filteredPosts()" :key="post.id">
      <div class="glass">
        <strong x-text="post.name"></strong>
        <p style="white-space: pre-wrap; margin-top: 0.5rem;" x-text="post.message"></p>
        <small x-text="post.timestamp"></small>
      </div>
    </template>
  </main>

  <script>
    function verifyPassword() {
      const input = document.getElementById("passInput").value;
      if (input === "papa123") {
        document.getElementById("lockscreen").style.display = "none";
      } else {
        alert("Wrong password, beta");
      }
    }
  </script>
</body>
</html>
